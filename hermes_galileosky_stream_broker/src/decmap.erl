-module(decmap).

-export([unfold/0]).

-spec decmap:unfold() -> boolean().

unfold() ->
    ets:insert(ets:new(galskytags, [set,named_table,protected,{read_concurrency, true}]), %% Hermes Galileosky protocol default decode map
    [	%% {Tag, {Len, ExtractFunc::[{Name,ExtractedDataValue}]}} %% "Parameter Name" (type)
    {16#1,{1,fun(<<BinData>>) -> {<<"hw_ver">>, BinData} end}},	%% "Hardware version" (unsigned integer)
    {16#2,{1,fun(<<BinData>>) -> {<<"fw_ver">>, BinData} end}},	%% "Firmware version" (unsigned integer)
    {16#3,{15,fun(BinData) -> {<<"imei">>, BinData} end}},	%% "IMEI" - used as DevUID (ASCII string)
    {16#4,{2,fun(<<BinData:16/little>>) -> {<<"dev_id">>, BinData} end}},	%% "Device ID" (unsigned integer)
    {16#10,{2,fun(<<BinData:16/little>>) -> {<<"arch_pos">>, BinData} end}},	%% "Archive position" (unsigned integer)
    {16#20,{4,fun(<<BinData:32/little>>) -> {<<"utc_time">>,  BinData} end}},	%% "UTC time" - UTC time (same as erlang:system_time(seconds)) in seconds (unsigned integer)
    {16#30,{9,fun(<<Valid:4,Sattelites:4,Latitude:4/little-signed-integer-unit:8,Longitude:4/little-signed-integer-unit:8>>) -> [{<<"valid">>, (Valid == 0) or (Valid == 2)},{<<"valid_gps">>, Valid == 0},{<<"valid_gsm">>, Valid == 2},{<<"sattelites">>, Sattelites},{<<"latitude">>, (Latitude/1000000)},{<<"longitude">>,(Longitude/1000000)}] end}},	%% "Device geoposition" (signed/unsigned integer)
    {16#33,{4,fun(<<Speed:2/little-unsigned-unit:8,Course:2/little-unsigned-unit:8>>) -> [{<<"speed">>, (Speed/10)},{<<"course">>, (Course/10)}] end}},	%% "Speed and Direction" (unsigned integer)
    {16#34,{2,fun(<<BinData:16/little>>) -> {<<"altitude">>, BinData} end}},	%% "Altitude" signed (signed integer)
    {16#35,{1,fun(<<BinData>>) -> [{<<"hdop_gps">>, (BinData/10)},{<<"hdop_gsm">>, (BinData*10)}] end}},	%% "HDOP or GSMLocationError" (unsigned integer)
    {16#40,{2,fun(<<F7:1,F6:1,F5:1,F4:1,F3:1,F2:1,F1:1,F0:1,F15:1,F14:1,F12_13:2,F11:1,F10:1,F9:1,F8:1>>) -> [{<<"f_mov_viblvl">>, F0 == 1 },{<<"f_not_allowable_angle">>, F1 == 1},{<<"f_trusted_ibut">>, F2 == 1},{<<"f_no_simcard">>, F3 == 1},{<<"f_inside_geofence">>, F4 == 1},{<<"f_low_intpwr">>, F5 == 1},{<<"f_no_gpsant">>, F6 == 1},{<<"f_fail_intbuspwr">>, F7 == 1},{<<"f_fail_extpwr">>, F8 == 1},{<<"f_mhours">>, F9 == 1},{<<"f_bump_viblvl">>, F10 == 1},{<<"f_ext_gpsmod">>, F11 == 1},{<<"gsmsgnlqlty">>, F12_13},{<<"f_alarmmode">>, F14 == 1},{<<"f_alarm">>, F15 == 1}] end}}, %% "Decoded device Status Flags" (boolean, unsigned integer)
    {16#41,{2,fun(<<BinData:16/little>>) -> {<<"ext_power">>, (BinData/1000)} end}},	%% "External power supply voltage mV" (unsigned integer)
    {16#42,{2,fun(<<BinData:16/little>>) -> {<<"int_battery">>, (BinData/1000)} end}},	%% "Internal battery power supply voltage mV" (unsigned integer)
    {16#43,{1,fun(<<BinData:8/signed-integer>>) -> {<<"int_temp">>, BinData} end}},	%% "Device temperature" (signed integer)
    {16#44,{4,fun(<<BinData:32/little>>) -> <<XAccl:10, YAccl:10, ZAccl:10, _/bits>> = <<BinData:32>>, [{<<"xaccel">>, XAccl},{<<"yaccel">>, YAccl},{<<"zaccel">>, ZAccl}] end}},	%% "Device acceleration" (unsigned integer)
    {16#45,{2,fun(<<BinData:16/little>>) -> {<<"outp_status">>, BinData} end}},	%% "Outputs status bitflags" (unsigned integer)
    {16#46,{2,fun(<<BinData:16/little>>) -> {<<"inp_status">>, BinData} end}},	%% "Inputs status bitflags" (unsigned integer)
    {16#47,{4,fun(<<BT0:8,BT1:8,BT2:8,BT3:8>>) -> [{<<"ecodrive_accel">>,(BT0/100)},{<<"ecodrive_decel">>,(BT1/100)},{<<"ecodrive_turn_accel">>,(BT2/100)},{<<"ecodrive_bump">>,(BT3/100)}] end}}, %% EcoDrive/drive style - in "g"
    {16#48,{2,fun(<<B0:1,B1:1,B2:1,_/bits>>) -> [{<<"f_mainserverconn">>, B0 == 1},{<<"f_gprssession">>, B1 == 1},{<<"f_gsmjamming">>, B2 == 1}] end}}, %% "Decoded extended terminal status" (boolean)
    {16#50,{2,fun(<<BinData:16/little>>) -> {<<"inp_0">>, BinData} end}},	%% Input0 (unsigned integer)
    {16#51,{2,fun(<<BinData:16/little>>) -> {<<"inp_1">>, BinData} end}},	%% Input1 (unsigned integer)
    {16#52,{2,fun(<<BinData:16/little>>) -> {<<"inp_2">>, BinData} end}},	%% Input2 (unsigned integer)
    {16#53,{2,fun(<<BinData:16/little>>) -> {<<"inp_3">>, BinData} end}},	%% Input3 (unsigned integer)
    {16#54,{2,fun(<<BinData:16/little>>) -> {<<"inp_4">>, BinData} end}},	%% Input4 (unsigned integer)
    {16#55,{2,fun(<<BinData:16/little>>) -> {<<"inp_5">>, BinData} end}},	%% Input5 (unsigned integer)
    {16#56,{2,fun(<<BinData:16/little>>) -> {<<"inp_6">>, BinData} end}},	%% Input6 (unsigned integer)
    {16#57,{2,fun(<<BinData:16/little>>) -> {<<"inp_7">>, BinData} end}},	%% Input7 (unsigned integer)
    {16#58,{2,fun(<<BinData:16/little>>) -> {<<"rs232_0">>, <<BinData:16>>} end}}, %% (unsigned integer)
    {16#59,{2,fun(<<BinData:16/little>>) -> {<<"rs232_1">>, <<BinData:16>>} end}}, %% (unsigned integer)
    {16#5A,{4,fun(<<BinData:32/little>>) -> {<<"rep_500">>, BinData} end}}, %% (unsigned integer)
    {16#5B,{117,fun(BinData) -> {<<"refregerator">>, BinData} end}},	%% 7 bytes + variable length = 117 bytes at all (binary)
    {16#5C,{68,fun(BinData) -> {<<"pressure_pro">>, BinData} end}}, %% 2 byte x 34s (binary)
    {16#5D,{3,fun(<<BinData:24/little>>) -> {<<"dbg_s11d">>, <<BinData:24>>} end}}, %% (binary)
    {16#60,{2,fun(<<BinData:16/little>>) -> {<<"rs485_0">>, BinData} end}}, %% (unsigned integer)
    {16#61,{2,fun(<<BinData:16/little>>) -> {<<"rs485_1">>, BinData} end}}, %% (unsigned integer)
    {16#62,{2,fun(<<BinData:16/little>>) -> {<<"rs485_2">>, BinData} end}}, %% (unsigned integer)
    {16#63,{3,fun(<<BinData:24/little>>) -> {<<"rs485_3">>, <<BinData:24>>} end}}, %% (binary)
    {16#64,{3,fun(<<BinData:24/little>>) -> {<<"rs485_4">>, <<BinData:24>>} end}}, %% (binary)
    {16#65,{3,fun(<<BinData:24/little>>) -> {<<"rs485_5">>, <<BinData:24>>} end}}, %% (binary)
    {16#66,{3,fun(<<BinData:24/little>>) -> {<<"rs485_6">>, <<BinData:24>>} end}}, %% (binary)
    {16#67,{3,fun(<<BinData:24/little>>) -> {<<"rs485_7">>, <<BinData:24>>} end}}, %% (binary)
    {16#68,{3,fun(<<BinData:24/little>>) -> {<<"rs485_8">>, <<BinData:24>>} end}}, %% (binary)
    {16#69,{3,fun(<<BinData:24/little>>) -> {<<"rs485_9">>, <<BinData:24>>} end}}, %% (binary)
    {16#6A,{3,fun(<<BinData:24/little>>) -> {<<"rs485_10">>, <<BinData:24>>} end}}, %% (binary)
    {16#6B,{3,fun(<<BinData:24/little>>) -> {<<"rs485_11">>, <<BinData:24>>} end}}, %% (binary)
    {16#6C,{3,fun(<<BinData:24/little>>) -> {<<"rs485_12">>, <<BinData:24>>} end}}, %% (binary)
    {16#6D,{3,fun(<<BinData:24/little>>) -> {<<"rs485_13">>, <<BinData:24>>} end}}, %% (binary)
    {16#6E,{3,fun(<<BinData:24/little>>) -> {<<"rs485_14">>, <<BinData:24>>} end}}, %% (binary)
    {16#6F,{3,fun(<<BinData:24/little>>) -> {<<"rs485_15">>, <<BinData:24>>} end}}, %% (binary)
    {16#70,{2,fun(<<BinData:16/little>>) -> {<<"t_0">>,<<BinData:16>>} end}}, %% (binary)
    {16#71,{2,fun(<<BinData:16/little>>) -> {<<"t_1">>,<<BinData:16>>} end}}, %% (binary)
    {16#72,{2,fun(<<BinData:16/little>>) -> {<<"t_2">>,<<BinData:16>>} end}}, %% (binary)
    {16#73,{2,fun(<<BinData:16/little>>) -> {<<"t_3">>,<<BinData:16>>} end}}, %% (binary)
    {16#74,{2,fun(<<BinData:16/little>>) -> {<<"t_4">>,<<BinData:16>>} end}}, %% (binary)
    {16#75,{2,fun(<<BinData:16/little>>) -> {<<"t_5">>,<<BinData:16>>} end}}, %% (binary)
    {16#76,{2,fun(<<BinData:16/little>>) -> {<<"t_6">>,<<BinData:16>>} end}}, %% (binary)
    {16#77,{2,fun(<<BinData:16/little>>) -> {<<"t_7">>,<<BinData:16>>} end}}, %% (binary)
    {16#80,{3,fun(<<BinData:24/little>>) -> {<<"ds1923_0">>,<<BinData:24>>} end}}, %% (binary)
    {16#81,{3,fun(<<BinData:24/little>>) -> {<<"ds1923_1">>,<<BinData:24>>} end}}, %% (binary)
    {16#82,{3,fun(<<BinData:24/little>>) -> {<<"ds1923_2">>,<<BinData:24>>} end}}, %% (binary)
    {16#83,{3,fun(<<BinData:24/little>>) -> {<<"ds1923_3">>,<<BinData:24>>} end}}, %% (binary)
    {16#84,{3,fun(<<BinData:24/little>>) -> {<<"ds1923_4">>,<<BinData:24>>} end}}, %% (binary)
    {16#85,{3,fun(<<BinData:24/little>>) -> {<<"ds1923_5">>,<<BinData:24>>} end}}, %% (binary)
    {16#86,{3,fun(<<BinData:24/little>>) -> {<<"ds1923_6">>,<<BinData:24>>} end}}, %% (binary)
    {16#87,{3,fun(<<BinData:24/little>>) -> {<<"ds1923_7">>,<<BinData:24>>} end}}, %% (binary)
    {16#88,{1,fun(<<BinData:8>>) -> {<<"rs2320">>, <<BinData:8>>} end}}, %% (binary)
    {16#89,{1,fun(<<BinData:8>>) -> {<<"rs2321">>, <<BinData:8>>} end}}, %% (binary)
    {16#8A,{1,fun(<<BinData:8>>) -> {<<"dut_0">>, <<BinData:8>>} end}}, %% (binary)
    {16#8B,{1,fun(<<BinData:8>>) -> {<<"dut_1">>, <<BinData:8>>} end}}, %% (binary)
    {16#8C,{1,fun(<<BinData:8>>) -> {<<"dut_2">>, <<BinData:8>>} end}}, %% (binary)
    {16#90,{4,fun(<<BinData:32/little>>) -> {<<"ibutton_1">>, BinData} end}},	%% ID number of iButton 1 (unsigned integer)
    {16#C0,{4,fun(<<BinData:32/little>>) -> {<<"can_a0">>, BinData} end}}, %% (unsigned integer)
    {16#C1,{4,fun(<<BinData:32/little>>) -> {<<"can_a1">>, BinData} end}}, %% (unsigned integer)
    {16#C2,{4,fun(<<BinData:32/little>>) -> {<<"can_b0">>, BinData} end}}, %% (unsigned integer)
    {16#C3,{4,fun(<<BinData:32/little>>) -> {<<"can_b1">>, BinData} end}}, %% (unsigned integer)
    {16#D3,{4,fun(<<BinData:32/little>>) -> {<<"ibutton_2">>, BinData} end}},	%% ID number of iButton 2 (unsigned integer)
    {16#D4,{4,fun(<<BinData:32/little>>) -> {<<"gps_total_trip">>, BinData} end}},	%% "Total trip by GPS/Glonass" (unsigned integer)
    {16#D5,{1,fun(<<F7:1,F6:1,F5:1,F4:1,F3:1,F2:1,F1:1,F0:1>>) -> [{<<"f_ibutton1">>, F0 == 1},{<<"f_ibutton2">>, F1 == 1},{<<"f_ibutton3">>, F2 == 1},{<<"f_ibutton4">>, F3 == 1},{<<"f_ibutton5">>, F4 == 1},{<<"f_ibutton6">>, F5 == 1},{<<"f_ibutton7">>, F6 == 1},{<<"f_ibutton8">>, F7 == 1}] end}},	%% "iButtons status bitflags" (flag boolean)
    {16#E2,{4,fun(<<BinData:32/little>>) -> {<<"userdata_0">>, BinData} end}}, %% (unsigned integer)
    {16#E3,{4,fun(<<BinData:32/little>>) -> {<<"userdata_1">>, BinData} end}}, %% (unsigned integer)
    {16#E4,{4,fun(<<BinData:32/little>>) -> {<<"userdata_2">>, BinData} end}}, %% (unsigned integer)
    {16#E5,{4,fun(<<BinData:32/little>>) -> {<<"userdata_3">>, BinData} end}}, %% (unsigned integer)
    {16#E6,{4,fun(<<BinData:32/little>>) -> {<<"userdata_4">>, BinData} end}}, %% (unsigned integer)
    {16#E7,{4,fun(<<BinData:32/little>>) -> {<<"userdata_5">>, BinData} end}}, %% (unsigned integer)
    {16#E8,{4,fun(<<BinData:32/little>>) -> {<<"userdata_6">>, BinData} end}}, %% (unsigned integer)
    {16#E9,{4,fun(<<BinData:32/little>>) -> {<<"userdata_7">>, BinData} end}}, %% (unsigned integer)
  %% UserData Array
    {16#EA,{fun(Data1) -> <<Len:8, _/binary>> = Data1, Len end, fun(<<BinData/binary>>) -> {<<"userdata_array">>, BinData} end}}, %% varible len (binary)
  %% CAN-Bus data defenition
    {16#C4,{1,fun(<<BinData>>) -> {<<"can8bitr0">>, BinData} end}},	%% "can8bitr0" (unsigned integer)
    {16#C5,{1,fun(<<BinData>>) -> {<<"can8bitr1">>, BinData} end}},	%% "can8bitr1" (unsigned integer)
    {16#C6,{1,fun(<<BinData>>) -> {<<"can8bitr2">>, BinData} end}},	%% "can8bitr2" (unsigned integer)
    {16#C7,{1,fun(<<BinData>>) -> {<<"can8bitr3">>, BinData} end}},	%% "can8bitr3" (unsigned integer)
    {16#C8,{1,fun(<<BinData>>) -> {<<"can8bitr4">>, BinData} end}},	%% "can8bitr4" (unsigned integer)
    {16#C9,{1,fun(<<BinData>>) -> {<<"can8bitr5">>, BinData} end}},	%% "can8bitr5" (unsigned integer)
    {16#CA,{1,fun(<<BinData>>) -> {<<"can8bitr6">>, BinData} end}},	%% "can8bitr6" (unsigned integer)
    {16#CB,{1,fun(<<BinData>>) -> {<<"can8bitr7">>, BinData} end}},	%% "can8bitr7" (unsigned integer)
    {16#CC,{1,fun(<<BinData>>) -> {<<"can8bitr8">>, BinData} end}},	%% "can8bitr8" (unsigned integer)
    {16#CD,{1,fun(<<BinData>>) -> {<<"can8bitr9">>, BinData} end}},	%% "can8bitr9" (unsigned integer)
    {16#CE,{1,fun(<<BinData>>) -> {<<"can8bitr10">>, BinData} end}},	%% "can8bitr10" (unsigned integer)
    {16#CF,{1,fun(<<BinData>>) -> {<<"can8bitr11">>, BinData} end}},	%% "can8bitr11" (unsigned integer)
    {16#D0,{1,fun(<<BinData>>) -> {<<"can8bitr12">>, BinData} end}},	%% "can8bitr12" (unsigned integer)
    {16#D1,{1,fun(<<BinData>>) -> {<<"can8bitr13">>, BinData} end}},	%% "can8bitr13" (unsigned integer)
    {16#D2,{1,fun(<<BinData>>) -> {<<"can8bitr14">>, BinData} end}},	%% "can8bitr14" (unsigned integer)
    {16#A0,{1,fun(<<BinData>>) -> {<<"can8bitr15">>, BinData} end}},	%% "can8bitr15" (unsigned integer)
    {16#A1,{1,fun(<<BinData>>) -> {<<"can8bitr16">>, BinData} end}},	%% "can8bitr16" (unsigned integer)
    {16#A2,{1,fun(<<BinData>>) -> {<<"can8bitr17">>, BinData} end}},	%% "can8bitr17" (unsigned integer)
    {16#A3,{1,fun(<<BinData>>) -> {<<"can8bitr18">>, BinData} end}},	%% "can8bitr18" (unsigned integer)
    {16#A4,{1,fun(<<BinData>>) -> {<<"can8bitr19">>, BinData} end}},	%% "can8bitr19" (unsigned integer)
    {16#A5,{1,fun(<<BinData>>) -> {<<"can8bitr20">>, BinData} end}},	%% "can8bitr20" (unsigned integer)
    {16#A6,{1,fun(<<BinData>>) -> {<<"can8bitr21">>, BinData} end}},	%% "can8bitr21" (unsigned integer)
    {16#A7,{1,fun(<<BinData>>) -> {<<"can8bitr22">>, BinData} end}},	%% "can8bitr22" (unsigned integer)
    {16#A8,{1,fun(<<BinData>>) -> {<<"can8bitr23">>, BinData} end}},	%% "can8bitr23" (unsigned integer)
    {16#A9,{1,fun(<<BinData>>) -> {<<"can8bitr24">>, BinData} end}},	%% "can8bitr24" (unsigned integer)
    {16#AA,{1,fun(<<BinData>>) -> {<<"can8bitr25">>, BinData} end}},	%% "can8bitr25" (unsigned integer)
    {16#AB,{1,fun(<<BinData>>) -> {<<"can8bitr26">>, BinData} end}},	%% "can8bitr26" (unsigned integer)
    {16#AC,{1,fun(<<BinData>>) -> {<<"can8bitr27">>, BinData} end}},	%% "can8bitr27" (unsigned integer)
    {16#AD,{1,fun(<<BinData>>) -> {<<"can8bitr28">>, BinData} end}},	%% "can8bitr28" (unsigned integer)
    {16#AE,{1,fun(<<BinData>>) -> {<<"can8bitr29">>, BinData} end}},	%% "can8bitr29" (unsigned integer)
    {16#AF,{1,fun(<<BinData>>) -> {<<"can8bitr30">>, BinData} end}},	%% "can8bitr30" (unsigned integer)
    {16#D6,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr0">>, BinData} end}},	%% "can16bitr0" (unsigned integer)
    {16#D7,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr1">>, BinData} end}},	%% "can16bitr1" (unsigned integer)
    {16#D8,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr2">>, BinData} end}},	%% "can16bitr2" (unsigned integer)
    {16#D9,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr3">>, BinData} end}},	%% "can16bitr3" (unsigned integer)
    {16#DA,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr4">>, BinData} end}},	%% "can16bitr4" (unsigned integer)
    {16#B0,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr5">>, BinData} end}},	%% "can16bitr5" (unsigned integer)
    {16#B1,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr6">>, BinData} end}},	%% "can16bitr6" (unsigned integer)
    {16#B2,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr7">>, BinData} end}},	%% "can16bitr7" (unsigned integer)
    {16#B3,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr8">>, BinData} end}},	%% "can16bitr8" (unsigned integer)
    {16#B4,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr9">>, BinData} end}},	%% "can16bitr9" (unsigned integer)
    {16#B5,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr10">>, BinData} end}},	%% "can16bitr10" (unsigned integer)
    {16#B6,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr11">>, BinData} end}},	%% "can16bitr11" (unsigned integer)
    {16#B7,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr12">>, BinData} end}},	%% "can16bitr12" (unsigned integer)
    {16#B8,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr13">>, BinData} end}},	%% "can16bitr13" (unsigned integer)
    {16#B9,{2,fun(<<BinData:16/little>>) -> {<<"can16bitr14">>, BinData} end}},	%% "can16bitr14" (unsigned integer)
    {16#DB,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr0">>, BinData} end}},	%% "can32bitr0" (unsigned integer)
    {16#DC,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr1">>, BinData} end}},	%% "can32bitr1" (unsigned integer)
    {16#DD,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr2">>, BinData} end}},	%% "can32bitr2" (unsigned integer)
    {16#DE,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr3">>, BinData} end}},	%% "can32bitr3" (unsigned integer)
    {16#DF,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr4">>, BinData} end}},	%% "can32bitr4" (unsigned integer)
    {16#F0,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr5">>, BinData} end}},	%% "can32bitr5" (unsigned integer)
    {16#F1,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr6">>, BinData} end}},	%% "can32bitr6" (unsigned integer)
    {16#F2,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr7">>, BinData} end}},	%% "can32bitr7" (unsigned integer)
    {16#F3,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr8">>, BinData} end}},	%% "can32bitr8" (unsigned integer)
    {16#F4,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr9">>, BinData} end}},	%% "can32bitr9" (unsigned integer)
    {16#F5,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr10">>, BinData} end}},	%% "can32bitr10" (unsigned integer)
    {16#F6,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr11">>, BinData} end}},	%% "can32bitr11" (unsigned integer)
    {16#F7,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr12">>, BinData} end}},	%% "can32bitr12" (unsigned integer)
    {16#F8,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr13">>, BinData} end}},	%% "can32bitr13" (unsigned integer)
    {16#F9,{4,fun(<<BinData:32/little>>) -> {<<"can32bitr14">>, BinData} end}}	%% "can32bitr14" (unsigned integer)
    ]).